% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yaml_meta_read.R
\name{meta_yaml_read}
\alias{meta_yaml_read}
\title{Read a \strong{pointblank} YAML file to create a metadata object}
\usage{
meta_yaml_read(path)
}
\arguments{
\item{path}{A path to a \strong{pointblnk} YAML file.}
}
\description{
With \code{meta_yaml_read()} we can read a \strong{pointblank} YAML file
that describes a table metadata (typically generated by the \code{\link[=yaml_write]{yaml_write()}}
function. What's returned is a new \emph{metadata} object with the metadata
intact. The metadata object can be given more metadata through use of the
\verb{meta_*()} functions.
}
\examples{
# We create a pointblank `metadata`
# object with `create_metadata()`;
# let's use that function with the
# `small_table` dataset
metadata <- create_metadata(small_table)

# A `metadata` object can be written
# to a YAML file by using the
# `yaml_write()` function
# yaml_write(
#   metadata = metadata,
#   filename = "metadata-small_table.yml"
# )

# The `metadata-small_table.yml` file
# looks like this when written

#> info_label: '[2020-09-06|13:37:38]'
#> table:
#>   name: small_table
#> _columns: 8
#> _rows: 13
#> _type: tbl_df
#> columns:
#>   date_time:
#>     _type: POSIXct, POSIXt
#>   date:
#>     _type: Date
#>   a:
#>     _type: integer
#>   b:
#>     _type: character
#>   c:
#>     _type: numeric
#>   d:
#>     _type: numeric
#>   e:
#>     _type: logical
#>   f:
#>     _type: character

# We can add keys and values to
# enrich the metadata with more
# pertinent information; with some
# direct editing of the file we get:

#> info_label: '[2020-09-06|13:37:38]'
#> table:
#>   name: small_table
#>   _columns: 8
#>   _rows: 13
#>   _type: tbl_df
#> columns:
#>   date_time:
#>     _type: POSIXct, POSIXt
#>     info: Date-time values.
#>   date:
#>     _type: Date
#>     info: Date values (the date part of `date_time`).
#>   a:
#>     _type: integer
#>     info: Small integer values (no missing values).
#>   b:
#>     _type: character
#>     info: Strings with a common pattern.
#>   c:
#>     _type: numeric
#>     info: Small numeric values (contains missing values).
#>   d:
#>     _type: numeric
#>     info: Large numeric values (much greater than `c`).
#>   e:
#>     _type: logical
#>     info: TRUE and FALSE values.
#>   f:
#>     _type: character
#>     info: Strings of the set `"low"`, `"mid"`, and `"high"`.

# We could also have done the same
# with the `metadata` object by use of
# the  `meta_columns()` function

# The 'metadata-small_table.yml' file
# is available in the package through
# `system.file()`
yml_file <- 
  system.file(
    "metadata-small_table.yml",
    package = "pointblank"
  )

# We can read this YAML file back
# as a `metadata` object by using
# `meta_yaml_read()`
metadata <- 
  meta_yaml_read(path = yml_file)

class(metadata)

}
