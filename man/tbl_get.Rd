% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tbl_store.R
\name{tbl_get}
\alias{tbl_get}
\title{Obtain a table from a \code{tbl_store} object}
\usage{
tbl_get(tbl, store = NULL)
}
\arguments{
\item{tbl}{The table to retrieve from a table \code{store}. This table could be
identified by its name (e.g., \code{tbl = "large_table"}) or by supplying a
reference using a subset (with \code{$}) of the \code{tbl_store} object (e.g.,
\code{tbl = store$large_table}). If using the latter method then nothing needs
to be supplied to \code{store}.}

\item{store}{The table store object created by the \code{\link[=tbl_store]{tbl_store()}} function.}
}
\value{
A table object.
}
\description{
With a \code{tbl_store} object at the ready, any table referenced in that store
can be materialized by providing a matching table name. The \code{\link[=tbl_store]{tbl_store()}}
function is used to create a store of tables, which is a catalog of table-
reading functions with names supplied for each of the tables. The \code{tbl_get()}
function does the work of evaluating a table-reading function and returning
the requested table.
}
\section{Function ID}{

1-9
}

\examples{
# Define a `tbl_store` object by adding
# table-reading functions inside the
# `tbl_store()` call
# tbls <- 
#   tbl_store(
#     small_table_duck ~ db_tbl(
#       table = small_table,
#       dbname = ":memory:",
#       dbtype = "duckdb"
#     ),
#     ~ db_tbl(
#       table = "rna",
#       dbname = "pfmegrnargs",
#       dbtype = "postgres",
#       host = "hh-pgsql-public.ebi.ac.uk",
#       port = 5432,
#       user = I("reader"),
#       password = I("NWDMCE5xdipIjRrp")
#     ),
#     all_revenue ~ db_tbl(
#       table = file_tbl(
#         file = from_github(
#           file = "all_revenue_large.rds",
#           repo = "rich-iannone/intendo",
#           subdir = "data-large"
#         )
#       ),
#       dbname = ":memory:",
#       dbtype = "duckdb"
#     ),
#     sml_table ~ pointblank::small_table
#   )

# Once this object is available, you can
# check that the table of interest is
# produced to your specification
# tbl_get(
#   tbl = "small_table_duck",
#   store = tbls
# )

# Another simpler way to get the same
# table materialized is by using `$` to
# get the entry of choice for `tbl_get()`
# tbls$small_table_duck \%>\% tbl_get()

# Creating an agent is easy when all
# table-reading functions are encapsulated
# in a `tbl_store` object; use `$` notation
# to pass the appropriate procedure for
# reading a table to the `read_fn` argument
# agent <-
#   create_agent(read_fn = tbls$small_table_duck)

}
\seealso{
Other Planning and Prep: 
\code{\link{action_levels}()},
\code{\link{create_agent}()},
\code{\link{create_informant}()},
\code{\link{db_tbl}()},
\code{\link{file_tbl}()},
\code{\link{scan_data}()},
\code{\link{tbl_store}()},
\code{\link{validate_rmd}()}
}
\concept{Planning and Prep}
