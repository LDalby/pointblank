% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata_add.R
\name{info_columns}
\alias{info_columns}
\title{Add metadata that focuses on aspects of a data table's columns}
\usage{
info_columns(metadata, columns, ..., .add = TRUE)
}
\arguments{
\item{metadata}{A metadata object of class \code{ptblank_informant}.}

\item{columns}{The column or set of columns to focus on. Can be defined as a
column name in quotes (e.g., \code{"<column_name>"}), one or more column names
in \code{vars()} (e.g., \verb{vars(<column_name>)}), or with a select helper (e.g.,
\code{starts_with("date")}).}

\item{...}{Metadata parameters as a series of named arguments.}

\item{.add}{Should new text be added to existing text? This is \code{TRUE} by
default; setting to \code{FALSE} replaces any existing text for a property.}
}
\value{
A \code{ptblank_informant} object.
}
\description{
Upon creation of a metadata object (with the \code{\link[=create_informant]{create_informant()}} function),
there are two sections containing properties: (1) 'table' and (2) 'columns'.
The 'columns' section is initialized with the table's column names and their
types (as \verb{_type}). Beyond that, it is useful to provide details about the
nature of each column and we can do that with the \code{info_columns()} function.
A single column (or multiple columns) is targeted, and then a series of named
arguments (in the form \code{property_name = "Description of property."}) serves
as additional metadata for the column or columns.
}
\examples{
# Create a pointblank `metadata`
# object with the `create_informant()` and
# the `small_table` dataset
metadata <- create_informant(small_table)

# The `metadata` object has the 'table'
# and 'columns' sections; we can add more
# properties to individual columns in
# the 'columns' section
metadata <-
  metadata \%>\%
  info_columns(
    columns = vars(a),
    info = "In the range of 1 to 10. (SIMPLE)"
  ) \%>\%
  info_columns(
    columns = starts_with("date"),
    info = "Time-based values (e.g., `Sys.time()`)."
  ) \%>\%
  info_columns(
    columns = "date",
    info = "The date part of `date_time`. (CALC)"
  )

# Upon printing the `metadata` object, we see
# the additions made to the 'columns' section
# metadata

# The `metadata` object can be written to
# a YAML file with the `yaml_write()`
# function; then, metadata properties can
# be directly edited or modified
# yaml_write(
#   metadata = metadata,
#   filename = "metadata.yml"
# )

# The YAML file can then be read back
# into a metadata object with the
# `meta_yaml_read()` function
# metadata <-
#   meta_yaml_read(path = "metadata.yml")

}
