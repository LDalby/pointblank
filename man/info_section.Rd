% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/info_add.R
\name{info_section}
\alias{info_section}
\title{Add information that focuses on some key aspect of the data table}
\usage{
info_section(x, section_name, ...)
}
\arguments{
\item{x}{An informant object of class \code{ptblank_informant}.}

\item{section_name}{The name of the section for which this information
pertains.}

\item{...}{Information entries as a series of named arguments.}
}
\value{
A \code{ptblank_informant} object.
}
\description{
While the \code{\link[=info_tabular]{info_tabular()}} and \code{\link[=info_columns]{info_columns()}} functions allow us to
add/modify info text for specific sections, the \code{info_section()}
makes it possible to add sections of our own choosing and the information
that make sense for those sections. Define a \code{section_name} and provide a
series of named arguments (in the form \code{entry_name = "The information."}) to
build the informational content for that section.
}
\examples{
# Create a pointblank `informant`
# object with `create_informant()`
# and the `small_table` dataset
informant <- create_informant(small_table)

# The `informant` object has the 'table'
# and 'columns' sections; we can create
# entirely different sections with their
# own properties using `info_section()`
informant <-
  informant \%>\%
  info_section(
    section_name = "notes",
    creation = "Dataset generated on (2020-01-15).",
    usage = "`small_table \%>\% dplyr::glimpse()`"
  )

# Upon printing the `informant` object, we see
# the addition of the 'notes' section and its
# own information

# The `informant` object can be written to
# a YAML file with the `yaml_write()`
# function; then, information can
# be directly edited or modified
# yaml_write(
#   informant = informant,
#   filename = "informant.yml"
# )

# The YAML file can then be read back
# into an informant object with the
# `yaml_read_informant()` function
# informant <-
#   yaml_read_informant(path = "informant.yml")

}
