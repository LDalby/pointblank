% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata_add.R
\name{info_tabular}
\alias{info_tabular}
\title{Add information that focuses on aspects of the data table as a whole}
\usage{
info_tabular(x, ...)
}
\arguments{
\item{x}{An informant object of class \code{ptblank_informant}.}

\item{...}{Metadata parameters as a series of named arguments.}
}
\value{
A \code{ptblank_informant} object.
}
\description{
When an \emph{informant} object is created with the \code{\link[=create_informant]{create_informant()}} function,
it has two starter sections: (1) 'table' and (2) 'columns'. The
'table' section should contain a few properties upon creation, such as the
supplied table name (\code{name}) and table dimensions (as \verb{_columns} and
\verb{_rows}). We can add more table-based properties with the \code{info_tabular()}
function. By providing a series of named arguments (in the form
\code{property_name = "Description of property."}), we can add more information
that makes sense for describing the table as a whole.
}
\examples{
# Create a pointblank `informant`
# object with `create_informant()`
# and the `small_table` dataset
informant <- create_informant(small_table)

# The `informant` object has the 'table'
# and 'columns' sections; we can add more
# properties to the 'table' section
informant <-
  informant \%>\%
  info_tabular(
    row_definition = "A row has randomized values.",
    source = c(
      "- From the **pointblank** package",
      "- [https://rich-iannone.github.io/pointblank/]()"
     )
   )

# Upon printing the `informant` object,
# we see the additions made to the 'table'
# section (before it wasn't visible at all
# since the properties were being used in the
# report header)

# The `informant` object can be written to
# a YAML file with the `yaml_write()`
# function; then information can
# be directly edited or modified
# yaml_write(
#   informant = informant,
#   filename = "informant.yml"
# )

# The YAML file can then be read back
# into an informant object with the
# `meta_yaml_read()` function
# informant <-
#   meta_yaml_read(path = "informant.yml")

}
